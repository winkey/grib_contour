#!/bin/bash
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor Boston, MA 02110-1301,  USA

source /etc/profile
source ~/.profile

export PATH="$PATH:@bindir@"

script=$(basename ${0})

if [ "$2" == "" ]
then
	datee=`date -u "+%Y%m%d"`
else
	datee=$2
fi

if createdb $db -D data 
then
	createlang plpgsql $db
	psql -d $db -f /usr/share/postgresql/contrib/lwpostgis.sql
	psql -d $db -f /usr/share/postgresql/contrib/spatial_ref_sys.sql
fi

pg="PG:dbname=$db"

##### get the number of cpu's #####

cpus=$(cat /proc/cpuinfo | grep "^processor" | wc -l)

################################################################################
#
# function to proccess a list of jobs
#
# 

function do_jobs {

	for job in "${joblist[@]}"
	do
		while [[ $(jobs | wc -l) -ge $cpus ]]
		do
			sleep 2
		done
	
		$job &
	done

}
	
################################################################################
#	function to make a dir for the temporary files
#
#	args:
#					$1	the dir to create
################################################################################

function mktempfiledir {
	if [ -d "$1" ]
	then
		rm -r "$1"
	else
		mkdir "$1"
	fi
}

################################################################################
#	function to plot the data
#
#	args:
#					$1	the grib file to plot
#					$2	the name of the product ie: 925hgt
#					$3	the grib msg #
#					$4	interval apart the contours are
#					$5	the forcast hour in the run
################################################################################

function plot {
	gribfile=$1
	name="$2"
	grbmsg=$3
	interval=$4
	timee=$5
	incr=$6
	extra="$7"

	nice -n 10 grib_contour -g "${gribfile}" -m $grbmsg \
													-i $interval -s $name \
													-p "$pg" -r $run -f $timee -l $incr \
													$extra
	

	
}

################################################################################
#  function to plot the wind data
#
#	 args:
#					$1	the grib file to plot
#					$2	the name of the product ie: 925hgt
#					$3	the grib msg #
#					$4	interval apart the contours are
#					$5	the forcast hour in the run
################################################################################

function windplot {
	ufile="$1"
	vfile="$2"
	name="$3"
	umsg=$4
	vmsg=$5
	interval=$6
	timee=$7
	incr=$8
	extra="$7"

	nice -n 10 grib_contour -w -u "${ufile}" -v "${vfile}" \
													-U $umsg -V $vmsg \
													-i $interval -s $name \
													-p "$pg" -r $run -f $timee -l $incr \
													$extra
	

	
}

function andplot {
	ufile="$1"
	vfile="$2"
	name="$3"
	umsg=$4
	vmsg=$5
	interval=$6
	timee=$7
	incr=$8
	extra="$7"
	
	nice -n 10 grib_contour -a -u "${ufile}" -v "${vfile}" \
													-U $umsg -V $vmsg \
													-i $interval -s $name \
													-p "$pg" -r $run -f $timee -l $incr \
													$extra
	
}

function diffplot {
	ufile="$1"
	vfile="$2"
	name="$3"
	umsg=$4
	vmsg=$5
	interval=$6
	timee=$7
	incr=$8
	extra="$9"

	nice -n 10 grib_contour -d -u "${ufile}" -v "${vfile}" \
													-U $umsg -V $vmsg \
													-i $interval -s $name \
													-p "$pg" -r $run -f $timee -l $incr \
													$extra
	
	
}
 

################################################################################
#	function to fetch the grib file
#
#	args:
#					$1	the site and path
#					$2	the filename
################################################################################

function getgrib {
	dir=$1
	file=$2
	ddir=$3
	
	wget "${dir}${file}" -O "${ddir}/${file}"
}

